template<typename value_type, typename function_type> value_type Base(const value_type x, const value_type dx, function_type func, int type_deriv) {    return 0.0; }; namespace {   template<class DC> class C {     void Fun(int G, const double x);   };   template<class DC> void C<DC>::Fun(int G, const double x) {    Base<double, CDFFunctor<DC>>(2, 2, f, 0);   };   template<class DC> class C2 {}; }